name: build

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        
    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'pnpm'
        
    - name: setup rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: install deps (ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev patchelf
        
    - name: install frontend deps
      run: pnpm install
      
    - name: build app
      run: pnpm tauri build --target ${{ matrix.target }}
      
    - name: upload release files
      if: startsWith(github.ref, 'refs/tags/')
      shell: bash
      run: |
        cd src-tauri/target/${{ matrix.target }}/release/bundle
        
        if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          # find dmg file and rename with target arch
          dmg_file=$(find . -name "*.dmg" | head -1)
          if [[ -n "$dmg_file" ]]; then
            arch_suffix=""
            if [[ "${{ matrix.target }}" == *"aarch64"* ]]; then
              arch_suffix="-arm64"
            else
              arch_suffix="-intel"
            fi
            mv "$dmg_file" "baboonwrite$arch_suffix.dmg"
            echo "DMG_FILE=baboonwrite$arch_suffix.dmg" >> $GITHUB_ENV
          fi
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          # find msi file
          msi_file=$(find . -name "*.msi" | head -1)
          if [[ -n "$msi_file" ]]; then
            mv "$msi_file" "baboonwrite-windows.msi"
            echo "MSI_FILE=baboonwrite-windows.msi" >> $GITHUB_ENV
          fi
        else
          # linux - find appimage or deb
          appimage_file=$(find . -name "*.AppImage" | head -1)
          deb_file=$(find . -name "*.deb" | head -1)
          if [[ -n "$appimage_file" ]]; then
            mv "$appimage_file" "baboonwrite-linux.AppImage"
            echo "APPIMAGE_FILE=baboonwrite-linux.AppImage" >> $GITHUB_ENV
          fi
          if [[ -n "$deb_file" ]]; then
            mv "$deb_file" "baboonwrite-linux.deb"
            echo "DEB_FILE=baboonwrite-linux.deb" >> $GITHUB_ENV
          fi
        fi
        
    - name: create release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: src-tauri/target/${{ matrix.target }}/release/bundle/**/*
        generate_release_notes: true
        draft: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}